<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- json컨버터 등록 그리고 pom.xml에 Jackson Databind 포함시켜야대 -->
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list value-type="java.util.ArrayList">
				<beans:ref bean="mappingJackson2HttpMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<beans:property name="supportedMediaTypes">
			<!-- 개발자가 원하는 각종 타입들을 여러개 명시할 수 있다. -->
			<beans:list>
				<beans:value>application/json;charset=utf-8</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.koreait.petshop.controller" />

	<!-- 상위 카테고리를 가져오는 공통코드 적용 AOP -->
	<beans:bean id="globalDataAspect"
		class="com.koreait.petshop.aop.GlobalDataAspect" />
	<beans:bean id="memberSessionCheckAspect"
		class="com.koreait.petshop.aop.MemberSessionCheckAspect" />

	<!-- aop 설정 -->
	<aop:config>
		<aop:aspect id="sessionCheckAspect"
			ref="memberSessionCheckAspect">
			<aop:pointcut
				expression="execution(public * com.koreait.petshop.controller.payment..*(..))"
				id="sessionPointcut" />
			<aop:around method="sessionCheck"
				pointcut-ref="sessionPointcut" />
		</aop:aspect>

		<aop:aspect id="categoryAspect" ref="globalDataAspect">
			<aop:pointcut
				expression="execution(public * com.koreait.petshop.controller..*(..))"
				id="categoryPointcut" />
			<aop:around method="getGlobalData"
				pointcut-ref="categoryPointcut" />
		</aop:aspect>
	</aop:config>


</beans:beans>
